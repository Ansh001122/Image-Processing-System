from pydantic import BaseModel
from enum import Enum
from datetime import datetime
from typing import List, Optional, Dict, Any

class ProcessingStatus(Enum):
    PENDING = "pending"
    PROCESSING = "processing"
    COMPLETED = "completed"
    FAILED = "failed"

class RequestResponse(BaseModel):
    request_id: str
    message: str
    status: str

class ProductInfo(BaseModel):
    serial_number: int
    product_name: str
    input_urls: List[str]
    output_urls: List[str]

class StatusResponse(BaseModel):
    request_id: str
    status: str
    total_images: int
    processed_images: int
    created_at: datetime
    updated_at: Optional[datetime] = None
    output_csv_url: Optional[str] = None
    products: List[Dict[str, Any]] = []